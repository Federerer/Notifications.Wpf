<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Notification.Wpf.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpf="clr-namespace:Notification.Wpf"
                    xmlns:p="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:converters="clr-namespace:Notification.Wpf.Converters"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/"
                    xmlns:constants="clr-namespace:Notification.Wpf.Constants">

    <SolidColorBrush x:Key="BorderBrush" Color="#EEE" p:Freeze="True"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" p:Freeze="True"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="White" p:Freeze="True"/>
    <SolidColorBrush x:Key="WhiteSmokeBrush" Color="WhiteSmoke" p:Freeze="True"/>
    <SolidColorBrush x:Key="BlackBrush" Color="Black" p:Freeze="True"/>
    <SolidColorBrush x:Key="GrayBrush" Color="Gray" p:Freeze="True"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="LightGray" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkGrayBrush" Color="DarkGray" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkRedBrush" Color="DarkRed" p:Freeze="True"/>
    <SolidColorBrush x:Key="RedBrush" Color="Red" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkOrangeBrush" Color="DarkOrange" p:Freeze="True"/>
    <SolidColorBrush x:Key="OrangeRedBrush" Color="OrangeRed" p:Freeze="True"/>
    <SolidColorBrush x:Key="OrangeBrush" Color="Orange" p:Freeze="True"/>
    <SolidColorBrush x:Key="YellowBrush" Color="Yellow" p:Freeze="True"/>
    <SolidColorBrush x:Key="LightYellowBrush" Color="LightYellow" p:Freeze="True"/>
    <SolidColorBrush x:Key="GreenBrush" Color="Green" p:Freeze="True"/>
    <SolidColorBrush x:Key="LimeGreenBrush" Color="LimeGreen" p:Freeze="True"/>
    <SolidColorBrush x:Key="BlueBrush" Color="Blue" p:Freeze="True"/>
    <SolidColorBrush x:Key="LimeBrush" Color="Lime" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkBlueBrush" Color="DarkBlue" p:Freeze="True"/>
    <DropShadowEffect x:Key="Shadow" p:Freeze="True"/>
    <ScaleTransform x:Key="Scale1.1" ScaleX="1.1" ScaleY="1.1" p:Freeze="True"/>
    <ScaleTransform x:Key="Scale0.9" ScaleX="0.9" ScaleY="0.9" p:Freeze="True"/>

    <Color x:Key="WhiteColor" A="255"  R="255" G="255" B="255"/>
    <Color x:Key="BlackColor" A="255"  R="0" G="0" B="0"/>

    <fa5:ImageAwesome x:Key="LinkIcon" Icon="Solid_Link" Foreground="{StaticResource WhiteBrush}" Height="20" Rotation="135" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="MinimizeIcon" Icon="Regular_WindowMinimize" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="MaximizeIcon" Icon="Regular_WindowMaximize" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="SettingIcon" Icon="Solid_Cog" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="LoadIcon" Icon="Solid_Spinner" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False" Spin="True" SpinDuration="1"/>
    <fa5:ImageAwesome x:Key="ErrorIcon" Icon="Solid_Bug" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="CloseIcon" Icon="Regular_WindowClose" Foreground="{StaticResource WhiteBrush}" Height="12" x:Shared="False"/>
    <fa5:ImageAwesome x:Key="AttachIcon" Icon="Solid_Paperclip"  Foreground="{StaticResource WhiteBrush}" Height="25" x:Shared="False">
        <fa5:ImageAwesome.Triggers>
            <EventTrigger RoutedEvent="fa5:ImageAwesome.Loaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty
                            ="(fa5:ImageAwesome.Foreground).(SolidColorBrush.Color)"
                            RepeatBehavior="10x"
                            AutoReverse="True">
                            <LinearColorKeyFrame
                                KeyTime="0:0:0"
                                Value="{StaticResource WhiteColor}"/>
                            <LinearColorKeyFrame
                                KeyTime="0:0:1"
                                Value="{StaticResource BlackColor}"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
        </fa5:ImageAwesome.Triggers>
    </fa5:ImageAwesome>

    <!--<Path x:Key="CloseIcon" Data="M 2.6874995 2.8246546e-7 -4.7683716e-7 2.6855503 5.3007795 7.9863303 -4.7683716e-7 13.28516 2.6874995 15.97266 l 5.29883 -5.30079 5.3007805 5.30079 2.68554 -2.6875 -5.29882 -5.2988297 5.29882 -5.30078 L 13.28711 2.8246546e-7 7.9863295 5.2988303 2.6874995 2.8246546e-7 Z" Fill="White" x:Shared="False"/>-->
    <Path x:Key="SuccessIcon"
          Data="M 15.56055 5.9323048e-7 7.53125 10.197261 2.73242 5.2304706 0 7.8710906 7.82422 15.968751 18.54492 2.3515606 15.56055 5.9323048e-7 Z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />
    <Path x:Key="InfoIcon"
          Data="M 10.968748 8.9809305e-8 C 4.9320181 8.9809305e-8 -1.9073487e-6 4.9320201 -1.9073487e-6 10.96875 c 0 6.03672 4.9322600073487 10.9668 10.9687499073487 10.9668 6.03648 0 10.96875 -4.93008 10.96875 -10.9668 C 21.937498 4.9320201 17.005458 8.9809305e-8 10.968748 8.9809305e-8 Z m 0 2.000000010190695 c 4.95043 0 8.96875 4.0183 8.96875 8.9687499 0 4.95044 -4.01809 8.9668 -8.96875 8.9668 -4.9506899 0 -8.9687499 -4.01636 -8.9687499 -8.9668 0 -4.9504499 4.0183 -8.9687499 8.9687499 -8.9687499 z m -1.4999999 2.49805 0 3 2.9999999 0 0 -3 -2.9999999 0 z m 0 4.4707 0 8.9101599 2.9999999 0 0 -8.9101599 -2.9999999 0 z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />
    <Path x:Key="WarningIcon"
          Data="M 12.414089 4.6396565e-7 C 12.128679 -9.5360343e-6 11.832699 0.06810046 11.574249 0.19726046 c -0.29252 0.14627 -0.55012 0.39584 -0.70899 0.67383 l -0.002 0.002 L 0.22067905 19.77348 l -0.0117 0.0234 C 0.08326905 20.04831 -9.5367432e-7 20.33976 -9.5367432e-7 20.64844 c 0 0.30629 0.0851000036743 0.62597 0.23633000367432 0.89063 0.13469 0.2357 0.31957 0.44504 0.5332 0.60937 l 0.0137 0.0117 0.0156 0.01 C 1.076789 22.36867 1.440719 22.48654 1.785149 22.48654 l 21.28516 0 c 0.3398 0 0.70907 -0.12364 0.98828 -0.33398 0.2208 -0.16158 0.42089 -0.3689 0.56055 -0.61328 0.15122 -0.26466 0.23633 -0.58434 0.23633 -0.89063 0 -0.30868 -0.0852 -0.60013 -0.21094 -0.85156 l -0.01 -0.0234 -10.66992 -18.90038954 -0.002 -0.002 c -0.15887 -0.27808 -0.41633 -0.52756 -0.70899 -0.67383 -0.25845 -0.12918 -0.55443 -0.19726999603 -0.83984 -0.19725999603 z m 0 2.19531003603435 10.32617 18.2910095 -20.625 0 10.29883 -18.2910095 z m -1.48633 3.84765 0 8.9121095 3 0 0 -8.9121095 -3 0 z m 0 10.3808595 0 3 3 0 0 -3 -3 0 z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />

    <ControlTemplate x:Key="OverButtonControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="TemplateBorder" Background="{StaticResource TransparentBrush}"
                RenderTransformOrigin="0.5,0.5"
                BorderBrush="{StaticResource BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Effect" Value="{StaticResource Shadow}"/>
                <Setter Property="RenderTransform" TargetName="TemplateBorder" Value="{StaticResource Scale1.1}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="TemplateBorder" Value="{StaticResource Scale0.9}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ButtonBase" x:Key="OverButton">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Template" Value="{StaticResource OverButtonControlTemplate}"/>
    </Style>

    <Style TargetType="Button" x:Key="CloseButtonStyle" BasedOn="{StaticResource OverButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentControl DockPanel.Dock="Top" Content="{StaticResource CloseIcon}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style TargetType="Button" x:Key="NotifyButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#22FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Label Content="{TemplateBinding Content}"
                           Foreground="{TemplateBinding Foreground}"
                           Background="{TemplateBinding Background}"
                           HorizontalContentAlignment="Center"
                           MinWidth="80"  MaxWidth="120"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#11FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#11000000"/>
                            <Setter Property="Foreground" Value="#FFAAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <wpf:NotificationTemplateSelector x:Key="NotificationTemplateSelector"/>

    <ControlTemplate x:Key="NotificationTemplate" TargetType="{x:Type controls:Notification}">
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type system:String}" x:Key="DefaultStringTemplate">
                <Border
                    Background="{Binding RelativeSource={RelativeSource AncestorType=controls:Notification}, Path=Background}"
                    MinHeight="80">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type wpf:NotificationContent}" x:Key="DefaultNotificationTemplate">
                <Border x:Name="Border" Padding="12" MinHeight="80">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Image Grid.Row="{Binding Image.Position , Converter={converters:ImagePositionGridRowConverter}}"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Visibility="{Binding Image.Position ,
                                Converter={wpf:Combine First={converters:ImagePositionConverter Position=None},
                                Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"
                               Source="{Binding Image.Source}"
                               Margin="{Binding Image.Position , Converter={converters:ImagePositionMarginConverter}}"/>

                        <ContentControl Grid.Row="1" Grid.Column="0" Margin="0,0,12,0" Width="25" VerticalAlignment="Stretch"
                                        Visibility="{Binding ElementName=LeftPanel,
                            Converter={wpf:Combine
                            First={wpf:HasVisibleContent},
                            Then={converters:BoolToVisibility Collapse=True}}}">
                            <DockPanel x:Name="LeftPanel">

                                <ContentControl DockPanel.Dock="Top" x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type ImageSource}">
                                            <Image Source="{Binding }"/>
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>

                                    <Button x:Name="Attach" DockPanel.Dock="Bottom"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                        Style="{StaticResource OverButton}"
                                         Visibility="Visible"
                                        controls:Notification.CloseOnClick="True"
                                        controls:Notification.AttachOnClick="{Binding}">
                                    <ContentControl x:Name="AttachIcon" DockPanel.Dock="Bottom" HorizontalAlignment="Center"  VerticalAlignment="Center" Content="{StaticResource AttachIcon}"/>
                                </Button>
                            </DockPanel>
                        </ContentControl>

                        <DockPanel Grid.Column="1" Grid.Row="1">
                            <TextBlock x:Name="TitleTxt" DockPanel.Dock="Top"

                                       Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       Margin="0,0,20,0"/>

                            <DockPanel LastChildFill="False" DockPanel.Dock="Bottom" Margin="0,8,0,0">
                                <Button x:Name="RightButton" Style="{StaticResource NotifyButton}" Command="{Binding RightButtonAction, Converter={wpf:ActionToCommandConverter}}"
                                        Content="{Binding RightButtonContent}" DockPanel.Dock="Right" controls:Notification.CloseOnClick="True"
                                        Visibility="{Binding RightButtonAction, Converter={wpf:Combine First={wpf:IsNull}, Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"/>
                                <Button x:Name="LeftButton" Style="{StaticResource NotifyButton}" Command="{Binding LeftButtonAction, Converter={wpf:ActionToCommandConverter}}"
                                        Content="{Binding LeftButtonContent}" DockPanel.Dock="Right" Margin="0,0,8,0" controls:Notification.CloseOnClick="True"
                                        Visibility="{Binding LeftButtonAction, Converter={wpf:Combine First={wpf:IsNull}, Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"/>
                            </DockPanel>

                            <TextBlock x:Name="MessageBox" 
                                       Text="{Binding Message}"
                                       TextWrapping="Wrap"
                                       Opacity=".8"
                                       Margin="0,0,12,0"/>

                        </DockPanel>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding TrimType}" Value="Attach">
                        <Setter TargetName="Attach" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox" Property="Height" Value="{Binding RowsCount, Converter={wpf:MessageRowsCountConverter BaseSize=20}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="AttachIfMoreRows">
                        <Setter TargetName="Attach" Property="Visibility" Value="{Binding Converter={wpf:NotificationAttachVisibleConverter}}"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox" Property="Height" Value="{Binding RowsCount, Converter={wpf:MessageRowsCountConverter BaseSize=20}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="Trim">
                        <Setter TargetName="Attach" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox"  Property="Height" Value="{Binding RowsCount, Converter={wpf:MessageRowsCountConverter BaseSize=20}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="NoTrim">
                        <Setter TargetName="Attach" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="None"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Notification">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource InfoIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.DefaultBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Information">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource InfoIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.InformationBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Success">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource SuccessIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.SuccessBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Warning">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource WarningIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.WarningBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Error">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource ErrorIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.ErrorBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Icon, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="Icon" Property="Content" Value="{Binding Icon}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Background, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="Border" Property="Background" Value="{Binding Background}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Foreground, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="TitleTxt" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="MessageBox" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="LeftButton" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="RightButton" Property="Foreground" Value="{Binding Foreground}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TitleTextSettings, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="TitleTxt" Property="FontFamily" Value="{Binding TitleTextSettings.FontFamily}"/>
                        <Setter TargetName="TitleTxt" Property="FontSize" Value="{Binding TitleTextSettings.FontSize}"/>
                        <Setter TargetName="TitleTxt" Property="TextAlignment" Value="{Binding TitleTextSettings.TextAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="HorizontalAlignment" Value="{Binding TitleTextSettings.HorizontalAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="VerticalAlignment" Value="{Binding TitleTextSettings.VerticalTextAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="FontStyle" Value="{Binding TitleTextSettings.FontStyle}"/>
                        <Setter TargetName="TitleTxt" Property="FontWeight" Value="{Binding TitleTextSettings.FontWeight}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MessageTextSettings, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="MessageBox" Property="FontFamily" Value="{Binding MessageTextSettings.FontFamily}"/>
                        <Setter TargetName="MessageBox" Property="FontSize" Value="{Binding MessageTextSettings.FontSize}"/>
                        <Setter TargetName="MessageBox" Property="TextAlignment" Value="{Binding MessageTextSettings.TextAlignment}"/>
                        <Setter TargetName="MessageBox" Property="HorizontalAlignment" Value="{Binding MessageTextSettings.HorizontalAlignment}"/>
                        <Setter TargetName="MessageBox" Property="VerticalAlignment" Value="{Binding MessageTextSettings.VerticalTextAlignment}"/>
                        <Setter TargetName="MessageBox" Property="FontStyle" Value="{Binding MessageTextSettings.FontStyle}"/>
                        <Setter TargetName="MessageBox" Property="FontWeight" Value="{Binding MessageTextSettings.FontWeight}"/>
                    </DataTrigger>

                </DataTemplate.Triggers>
            </DataTemplate>
        </ControlTemplate.Resources>
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="8,8,0,0">
            <Grid>
                <ContentPresenter/>
                <Button x:Name="PART_CloseButton" Style="{StaticResource CloseButtonStyle}" Margin="12" Foreground="{TemplateBinding Foreground}" Opacity=".8"
                        Visibility="{Binding XbtnVisibility, RelativeSource={RelativeSource AncestorType={x:Type controls:Notification}}}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" To="1" Duration="0:0:.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" To="1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="controls:Notification.NotificationCloseInvoked" >
                <BeginStoryboard>
                    <Storyboard Duration="0:0:.1">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1" To="0.1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard BeginTime="0:0:.2">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1" To="0" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type controls:Notification}">
        <!--<Setter Property="Height" Value="100"/>-->
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#444444"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template" Value="{StaticResource NotificationTemplate}"/>
        <Setter Property="ContentTemplateSelector" Value="{StaticResource NotificationTemplateSelector}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type controls:NotificationArea}">
        <Setter Property="Margin" Value="0,0,8,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NotificationArea}">
                    <controls:ReversibleStackPanel x:Name="PART_Items"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="TopLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="TopRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>

                        <Trigger Property="Position" Value="TopCenter">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomLeft">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True"/>
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomRight">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True"/>
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomCenter">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>